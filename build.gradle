plugins {
    id 'java'
    id 'groovy'
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.siouan.frontend-jdk11' version '6.0.0'
}

group = 'org.olac'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.apache.commons:commons-csv:1.10.0'

    implementation 'io.github.openfeign:feign-okhttp:10.12'
    implementation 'io.github.openfeign:feign-jackson:10.12'
    implementation 'io.github.openfeign.form:feign-form:3.8.0'
    implementation 'io.github.openfeign:feign-slf4j:10.12'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    implementation 'com.google.api-client:google-api-client:2.2.0'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'

    runtimeOnly 'com.mysql:mysql-connector-j'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor 'org.hibernate:hibernate-jpamodelgen:6.1.7.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.spockframework:spock-core:2.2-groovy-4.0'
    testImplementation 'org.objenesis:objenesis-tck:3.2'

}

tasks.named('test') {
    useJUnitPlatform()
}

frontend {
    nodeVersion = '18.14.1'
    assembleScript = 'run build'
    cleanScript = 'run clean'
    packageJsonDirectory = new File(projectDir, 'src/main/quasar')
}

task copyFrontend {
    dependsOn 'assembleFrontend'
    doLast {
        copy {
            from "${projectDir}/src/main/quasar/dist/spa"
            into "${buildDir}/resources/main/static"
        }
    }
}

processResources.dependsOn 'copyFrontend'
